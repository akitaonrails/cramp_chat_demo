<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Chat</title>
    <link rel="stylesheet" href="stylesheets/typogridphy.css" type="text/css" media="screen" charset="utf-8"/>
    <link rel="stylesheet" href="stylesheets/style.css" type="text/css" media="screen" charset="utf-8"/>
  </head>
  <body>
    <div>
      <header>
        <h1>Welcome to Chat</h1>
      </header>
      <section id="chat">
        <ol id="messages">
        </ol>

        <form id="form" onsubmit="onSubmit(); return false;">
          <ol>
            <li id="nick">
              <label for="from">Nick:</label>
              <input id='from' type="text" name="from" value="Foo"/>
            </li>
            <li id="message">
              <label for="msg">Message:</label>
              <textarea id='msg' name="msg" rows="3" cols="50"></textarea>
            </li>
            <li id="button">
              <input type="submit" value="Say it" id="send"/>
            </li>
          </ol>
        </form>
        <p id="status"></p>
      </section>

    </div>

    <script type="text/javascript"
      src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js"></script>
    <script type="text/javascript" src="javascript/swfobject.js"></script>
    <script type="text/javascript" src="javascript/FABridge.js"></script>
    <script type="text/javascript" src="javascript/web_socket.js"></script>
    <script type="text/javascript">

      // Set URL of your WebSocketMain.swf here:
      WebSocket.__swfLocation = "javascript/WebSocketMain.swf";

      var ws;

      function initConnection() {
        // Connect to Web Socket.
        // Change host/port here to your own Web Socket server.
        ws = new WebSocket("ws://<%= request.host_with_port %>/websocket");

        // Set event handlers.
        ws.onopen = function() {
          output([{from: 'Host', msg: ' Welcome to chat. Please don\'t hurt each other.'}]);
        };

        ws.onmessage = function(e) {
          // e.data contains received string.
          output(eval(e.data));
        };
        ws.onclose = function() {
          output([{message: "Connection closed"}]);
          initConnection(); // reconnect
        };
      }

      $(document).ready(function() {
        initConnection();
        $("#msg").focus();
      });

      function onSubmit() {
        ws.send($("#form").serialize());
        $("#msg").val("");
        $("#msg").focus();
      }

      function output(data) {
        $.each(data, function(i, item) {
          if (item.from != null) {
          $("#messages").append( '<li class="message"> <p><span class="from">' + item.from + ':</span> ' + item.msg + '</p> </li>');
          }
          if (item.message != null) {
            $("#status").html( item.message);
          }
        })
        var messages = document.getElementById("messages");
        messages.scrollTop = messages.scrollHeight;
      }

    </script>
  </body>
</html>
